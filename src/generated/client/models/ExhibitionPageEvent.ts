/* tslint:disable */
/* eslint-disable */
/**
 * Muisti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ExhibitionPageEventProperty,
    ExhibitionPageEventPropertyFromJSON,
    ExhibitionPageEventPropertyFromJSONTyped,
    ExhibitionPageEventPropertyToJSON,
    ExhibitionPageEventType,
    ExhibitionPageEventTypeFromJSON,
    ExhibitionPageEventTypeFromJSONTyped,
    ExhibitionPageEventTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface ExhibitionPageEvent
 */
export interface ExhibitionPageEvent {
    /**
     * 
     * @type {ExhibitionPageEventType}
     * @memberof ExhibitionPageEvent
     */
    type: ExhibitionPageEventType;
    /**
     * 
     * @type {Array<ExhibitionPageEventProperty>}
     * @memberof ExhibitionPageEvent
     */
    properties?: Array<ExhibitionPageEventProperty>;
}

export function ExhibitionPageEventFromJSON(json: any): ExhibitionPageEvent {
    return ExhibitionPageEventFromJSONTyped(json, false);
}

export function ExhibitionPageEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExhibitionPageEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': ExhibitionPageEventTypeFromJSON(json['type']),
        'properties': !exists(json, 'properties') ? undefined : ((json['properties'] as Array<any>).map(ExhibitionPageEventPropertyFromJSON)),
    };
}

export function ExhibitionPageEventToJSON(value?: ExhibitionPageEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': ExhibitionPageEventTypeToJSON(value.type),
        'properties': value.properties === undefined ? undefined : ((value.properties as Array<any>).map(ExhibitionPageEventPropertyToJSON)),
    };
}


