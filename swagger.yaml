openapi: 3.0.0
info:
  version: 1.0.0
  title: Muisti API
security:
  - bearerAuth: []
paths:

  /exhibitions:
    get:
      operationId: listExhibitions
      summary: List exhibitions.
      description: Lists a exhibition
      tags:
        - Exhibitions
      responses:
        "200":
          description: A exhibition list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Exhibition"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createExhibition
      summary: Create a exhibition.
      description: Creates new exhibition
      tags:
        - Exhibitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Exhibition"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exhibition"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}:
    get:
      operationId: findExhibition
      summary: Find a exhibition.
      description: Finds a exhibition by id
      tags:
        - Exhibitions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exhibition"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateExhibition
      summary: Updates exhibition.
      description: Updates exhibition
      tags:
        - Exhibitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Exhibition"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exhibition"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteExhibition
      summary: Deletes exhibition.
      description: Delets exhibition
      tags:
        - Exhibitions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/visitor:
    get:
      operationId: listVisitors
      summary: List visitors
      description: List exhibition visitors
      tags:
        - Visitors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: tagId
          in: query
          description: query by RFID tag
          schema:
            type: string
      responses:
        "200":
          description: A visitor list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Visitor"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createVisitor
      summary: Create a visitor
      description: Creates a new exhibition visitor
      tags:
        - Visitors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Visitor"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition visitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Visitor"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/visitors/{visitorId}:
    get:
      operationId: findVisitor
      summary: Find a visitor
      description: Finds a visitor by id
      tags:
        - Visitors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: visitorId
          required: true
          in: path
          description: visitor id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Visitor"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateVisitor
      summary: Updates a visitor.
      description: Updates a visitor.
      tags:
        - Visitors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Visitor"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: visitorId
          required: true
          in: path
          description: visitor id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated visitor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Visitor"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteVisitor
      summary: Deletes a visitor.
      description: Deletes an exhibition visitor.
      tags:
        - Visitors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: visitorId
          required: true
          in: path
          description: visitor id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/visitorSessions:
    get:
      operationId: listVisitorSessions
      summary: List visitor sessions
      description: List exhibition visitor sessions
      tags:
        - VisitorSessions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: tagId
          in: query
          description: query by RFID tag
          schema:
            type: string
      responses:
        "200":
          description: A visitor session list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VisitorSession"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createVisitorSession
      summary: Create a visitor session
      description: Creates new exhibition visitor session
      tags:
        - VisitorSessions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisitorSession"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition visitor session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitorSession"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/visitorSessions/{visitorSessionId}:
    get:
      operationId: findVisitorSession
      summary: Find a visitor session
      description: Finds a visitor session by id
      tags:
        - VisitorSessions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: visitorSessionId
          required: true
          in: path
          description: visitor session id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitorSession"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateVisitorSession
      summary: Updates visitor session.
      description: Updates visitor session.
      tags:
        - VisitorSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VisitorSession"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: visitorSessionId
          required: true
          in: path
          description: visitor session id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitorSession"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteVisitorSession
      summary: Deletes visitor session.
      description: Delets exhibition visitor session.
      tags:
        - VisitorSessions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: visitorSessionId
          required: true
          in: path
          description: visitor session id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/visitorTags/{tagId}:
    get:
      operationId: findVisitorTag
      summary: Find a visitor tag
      description: Finds a visitor tag by tagId
      tags:
        - Visitors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: tagId
          required: true
          in: path
          description: visitor tag id
          schema:
            type: string
      responses:
        "200":
          description: A visitor tag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitorTag"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/rooms:
    get:
      operationId: listExhibitionRooms
      summary: List rooms
      description: List exhibition rooms
      tags:
        - ExhibitionRooms
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: floorId
          in: query
          description: exhibition floor id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A room list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExhibitionRoom"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createExhibitionRoom
      summary: Create a room
      description: Creates new exhibition room
      tags:
        - ExhibitionRooms
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionRoom"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition room
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionRoom"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/rooms/{roomId}:
    get:
      operationId: findExhibitionRoom
      summary: Find a room
      description: Finds a room by id
      tags:
        - ExhibitionRooms
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: roomId
          required: true
          in: path
          description: room id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionRoom"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateExhibitionRoom
      summary: Updates room.
      description: Updates room.
      tags:
        - ExhibitionRooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionRoom"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: roomId
          required: true
          in: path
          description: room id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionRoom"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteExhibitionRoom
      summary: Deletes room.
      description: Delets exhibition room.
      tags:
        - ExhibitionRooms
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: roomId
          required: true
          in: path
          description: room id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/floors:
    get:
      operationId: listExhibitionFloors
      summary: List floors
      description: List exhibition floors
      tags:
        - ExhibitionFloors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A floor list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExhibitionFloor"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createExhibitionFloor
      summary: Create a floor
      description: Creates new exhibition floor
      tags:
        - ExhibitionFloors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionFloor"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition floor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionFloor"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/floors/{floorId}:
    get:
      operationId: findExhibitionFloor
      summary: Find a floor
      description: Finds a floor by id
      tags:
        - ExhibitionFloors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: floorId
          required: true
          in: path
          description: floor id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionFloor"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateExhibitionFloor
      summary: Updates floor.
      description: Updates floor.
      tags:
        - ExhibitionFloors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionFloor"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: floorId
          required: true
          in: path
          description: floor id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionFloor"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteExhibitionFloor
      summary: Deletes floor.
      description: Delets exhibition floor.
      tags:
        - ExhibitionFloors
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: floorId
          required: true
          in: path
          description: floor id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/deviceGroups:
    get:
      operationId: listExhibitionDeviceGroups
      summary: List device groups
      description: List exhibition device groups
      tags:
        - ExhibitionDeviceGroups
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: roomId
          in: query
          description: filter by room id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A device group list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExhibitionDeviceGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createExhibitionDeviceGroup
      summary: Create a device group
      description: Creates new exhibition device group
      tags:
        - ExhibitionDeviceGroups
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionDeviceGroup"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition device group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionDeviceGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/deviceGroups/{deviceGroupId}:
    get:
      operationId: findExhibitionDeviceGroup
      summary: Find a device group
      description: Finds a device group by id
      tags:
        - ExhibitionDeviceGroups
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: deviceGroupId
          required: true
          in: path
          description: device group id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionDeviceGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateExhibitionDeviceGroup
      summary: Updates device group.
      description: Updates device group.
      tags:
        - ExhibitionDeviceGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionDeviceGroup"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: deviceGroupId
          required: true
          in: path
          description: device group id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionDeviceGroup"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteExhibitionDeviceGroup
      summary: Deletes device group.
      description: Delets exhibition device group.
      tags:
        - ExhibitionDeviceGroups
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: deviceGroupId
          required: true
          in: path
          description: device group id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /deviceModels:
    get:
      operationId: listDeviceModels
      summary: List device models
      description: List exhibition device models
      tags:
        - DeviceModels
      responses:
        "200":
          description: A device model list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceModel"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDeviceModel
      summary: Create a device model
      description: Creates new exhibition device model
      tags:
        - DeviceModels
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceModel"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition device model
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceModel"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /deviceModels/{deviceModelId}:
    get:
      operationId: findDeviceModel
      summary: Find a device model
      description: Finds a device model by id
      tags:
        - DeviceModels
      parameters:
        - name: deviceModelId
          required: true
          in: path
          description: device model id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceModel"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateDeviceModel
      summary: Updates device model.
      description: Updates device model.
      tags:
        - DeviceModels
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceModel"
        description: Payload
        required: true
      parameters:
        - name: deviceModelId
          required: true
          in: path
          description: device model id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceModel"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteDeviceModel
      summary: Deletes device model.
      description: Delets exhibition device model.
      tags:
        - DeviceModels
      parameters:
        - name: deviceModelId
          required: true
          in: path
          description: device model id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/devices:
    get:
      operationId: listExhibitionDevices
      summary: List devices
      description: List exhibition devices
      tags:
        - ExhibitionDevices
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: Exhibition id
          schema:
            type: string
            format: uuid
        - name: exhibitionGroupId
          in: query
          description: Filter by exhibition group id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A device list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExhibitionDevice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createExhibitionDevice
      summary: Create a device
      description: Creates new exhibition device
      tags:
        - ExhibitionDevices
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionDevice"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionDevice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/devices/{deviceId}:
    get:
      operationId: findExhibitionDevice
      summary: Find a device
      description: Finds a device by id
      tags:
        - ExhibitionDevices
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: deviceId
          required: true
          in: path
          description: device id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionDevice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateExhibitionDevice
      summary: Updates device.
      description: Updates device.
      tags:
        - ExhibitionDevices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionDevice"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: deviceId
          required: true
          in: path
          description: device id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionDevice"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteExhibitionDevice
      summary: Deletes device.
      description: Delets exhibition device.
      tags:
        - ExhibitionDevices
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: deviceId
          required: true
          in: path
          description: device id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/rfidAntennas:
    get:
      operationId: listRfidAntennas
      summary: List RFID antennas
      description: List RFID antennas
      tags:
        - RfidAntennas
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: Exhibition id
          schema:
            type: string
            format: uuid
        - name: roomId
          in: query
          description: Filter by room id
          schema:
            type: string
            format: uuid
        - name: deviceGroupId
          in: query
          description: Filter by device group id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A RFID antenna list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RfidAntenna"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createRfidAntenna
      summary: Create an RFID antenna
      description: Creates new RFID antenna
      tags:
        - RfidAntennas
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RfidAntenna"
        description: Payload
        required: true
      responses:
        "200":
          description: Created RFID antenna
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RfidAntenna"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/rfidAntennas/{rfidAntennaId}:
    get:
      operationId: findRfidAntenna
      summary: Find an RFID antenna
      description: Finds an RFID antenna by id
      tags:
        - RfidAntennas
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: rfidAntennaId
          required: true
          in: path
          description: RFID antena id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A RFID antenna
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RfidAntenna"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateRfidAntenna
      summary: Updates RFID antenna.
      description: Updates RFID antenna.
      tags:
        - RfidAntennas
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RfidAntenna"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: rfidAntennaId
          required: true
          in: path
          description: RFID antena id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated RFID antenna
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RfidAntenna"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteRfidAntenna
      summary: Deletes RFID antenna.
      description: Delets RFID antenna.
      tags:
        - RfidAntennas
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: rfidAntennaId
          required: true
          in: path
          description: RFID antena id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/pages:
    get:
      operationId: listExhibitionPages
      summary: List pages
      description: List exhibition pages
      tags:
        - ExhibitionPages
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: contentVersionId
          in: query
          description: Filter by content id
          schema:
            type: string
            format: uuid
        - name: exhibitionDeviceId
          in: query
          description: Filter by device id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A page list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExhibitionPage"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createExhibitionPage
      summary: Create a page
      description: Creates new exhibition page
      tags:
        - ExhibitionPages
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionPage"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionPage"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/pages/{pageId}:
    get:
      operationId: findExhibitionPage
      summary: Find a page
      description: Finds a page by id
      tags:
        - ExhibitionPages
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: pageId
          required: true
          in: path
          description: page id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionPage"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateExhibitionPage
      summary: Updates page.
      description: Updates page.
      tags:
        - ExhibitionPages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExhibitionPage"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: pageId
          required: true
          in: path
          description: page id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExhibitionPage"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteExhibitionPage
      summary: Deletes page.
      description: Delets exhibition page.
      tags:
        - ExhibitionPages
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: pageId
          required: true
          in: path
          description: page id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/contentVersions:
    get:
      operationId: listContentVersions
      summary: List content versions
      description: List content versions
      tags:
        - ContentVersions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: roomId
          in: query
          description: Filter by room id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A content version list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContentVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createContentVersion
      summary: Create a content version
      description: Creates new content version
      tags:
        - ContentVersions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentVersion"
        description: Payload
        required: true
      responses:
        "200":
          description: Created content version
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/contentVersions/{contentVersionId}:
    get:
      operationId: findContentVersion
      summary: Find a content version
      description: Finds a content version by id
      tags:
        - ContentVersions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: contentVersionId
          required: true
          in: path
          description: contentVersion id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateContentVersion
      summary: Updates content version.
      description: Updates content version.
      tags:
        - ContentVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentVersion"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: contentVersionId
          required: true
          in: path
          description: contentVersion id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteContentVersion
      summary: Deletes content version.
      description: Delets content version.
      tags:
        - ContentVersions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: contentVersionId
          required: true
          in: path
          description: contentVersion id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/groupContentVersions:
    get:
      operationId: listGroupContentVersions
      summary: List group content versions
      description: List group content versions
      tags:
        - GroupContentVersions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A content version list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupContentVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createGroupContentVersion
      summary: Create a group content version
      description: Creates new group content version
      tags:
        - GroupContentVersions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupContentVersion"
        description: Payload
        required: true
      responses:
        "200":
          description: Created content version
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupContentVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:

                $ref: "#/components/schemas/Error"

  /exhibitions/{exhibitionId}/groupContentVersions/{groupContentVersionId}:
    get:
      operationId: findGroupContentVersion
      summary: Find a group content version
      description: Finds a group content version by id
      tags:
        - GroupContentVersions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: groupContentVersionId
          required: true
          in: path
          description: group content version id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupContentVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateGroupContentVersion
      summary: Updates group content version.
      description: Updates group content version.
      tags:
        - GroupContentVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupContentVersion"
        description: Payload
        required: true
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: groupContentVersionId
          required: true
          in: path
          description: group content version id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupContentVersion"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteGroupContentVersion
      summary: Deletes group content version.
      description: Delets group content version.
      tags:
        - GroupContentVersions
      parameters:
        - name: exhibitionId
          required: true
          in: path
          description: exhibition id
          schema:
            type: string
            format: uuid
        - name: groupContentVersionId
          required: true
          in: path
          description: group content version id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /pageLayouts:
    get:
      operationId: listPageLayouts
      summary: List page layouts
      description: List page layouts
      tags:
        - PageLayouts
      parameters:
        - name: deviceModelId
          required: false
          in: query
          description: device model id
          schema:
            type: string
            format: uuid
        - name: screenOrientation
          required: false
          in: query
          description: screen orientation
          schema:
            type: string
      responses:
        "200":
          description: A page layout list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PageLayout"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createPageLayout
      summary: Create a page layout
      description: Creates new page layout
      tags:
        - PageLayouts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageLayout"
        description: Payload
        required: true
      responses:
        "200":
          description: Created exhibition page layout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageLayout"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /pageLayouts/{pageLayoutId}:
    get:
      operationId: findPageLayout
      summary: Find a page layout
      description: Finds a page layout by id
      tags:
        - PageLayouts
      parameters:
        - name: pageLayoutId
          required: true
          in: path
          description: page layout id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageLayout"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updatePageLayout
      summary: Updates page layout.
      description: Updates page layout.
      tags:
        - PageLayouts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageLayout"
        description: Payload
        required: true
      parameters:
        - name: pageLayoutId
          required: true
          in: path
          description: page layout id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated exhibition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageLayout"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deletePageLayout
      summary: Deletes page layout.
      description: Delets page layout.
      tags:
        - PageLayouts
      parameters:
        - name: pageLayoutId
          required: true
          in: path
          description: page layout id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /system/ping:
    get:
      summary: System ping endpoint
      operationId: ping
      tags:
        - system
      responses:
        '200':
          description: System ping response
          content:
            text/plain:
              schema:
                description: Returns PING
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Exhibition:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    ExhibitionFloor:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        floorPlanUrl:
          type: string
          format: url
        floorPlanBounds:
          $ref: '#/components/schemas/Bounds'
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    ExhibitionRoom:
      type: object
      required:
        - name
        - floorId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
        floorId:
          type: string
          format: uuid
        name:
          type: string
        geoShape:
          $ref: '#/components/schemas/Polygon'
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    ExhibitionDeviceGroup:
      type: object
      required:
        - name
        - allowVisitorSessionCreation
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
        roomId:
          type: string
          format: uuid
        name:
          type: string
        allowVisitorSessionCreation:
          type: boolean
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    ExhibitionDevice:
      type: object
      required:
        - name
        - groupId
        - modelId
        - screenOrientation
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
        indexPageId:
          type: string
          format: uuid
          description: Index page for a device
        groupId:
          type: string
          format: uuid
          description: Device group id
        modelId:
          type: string
          format: uuid
          description: Device model id
        name:
          type: string
        location:
          $ref: '#/components/schemas/Point'
        screenOrientation:
          $ref: '#/components/schemas/ScreenOrientation'
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    RfidAntenna:
      type: object
      required:
        - name
        - roomId
        - readerId
        - antennaNumber
        - location
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
        roomId:
          type: string
          format: uuid
          description: Id of room this RFID antenna is located at
        groupId:
          type: string
          format: uuid
          description: Device group id this antenna is conneted to
        readerId:
          type: string
          description: RFID reader module id
        antennaNumber:
          type: integer
          format: int32
          description: RFID antenna number
        name:
          type: string
          description: Human-readable name for this antenna
        location:
          $ref: '#/components/schemas/Point'
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    DeviceModel:
      type: object
      description: Describes device model used in exhibition
      required:
        - manufacturer
        - model
        - dimensions
        - displayMetrics
        - capabilities
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        manufacturer:
          type: string
        model:
          type: string
        dimensions:
          $ref: '#/components/schemas/DeviceModelDimensions'
        displayMetrics:
          $ref: '#/components/schemas/DeviceModelDisplayMetrics'
        capabilities:
          $ref: '#/components/schemas/DeviceModelCapabilities'
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    Point:
      type: object
      description: Describes a single point in a exhibition floor plan
      properties:
        x:
          type: number
          format: double
        y:
          type: number
          format: double

    DeviceModelDimensions:
      type: object
      description: Describes device model physical dimensions
      properties:
        deviceWidth:
          type: number
          format: double
        deviceHeight:
          type: number
          format: double
        deviceDepth:
          type: number
          format: double
        screenWidth:
          type: number
          format: double
        screenHeight:
          type: number
          format: double

    DeviceModelDisplayMetrics:
      type: object
      description: Describes device display information
      properties:
        heightPixels:
          type: integer
          format: int32
        widthPixels:
          type: integer
          format: int32
        density:
          type: number
          format: double
        xdpi:
          type: number
          format: double
        ydpi:
          type: number
          format: double

    DeviceModelCapabilities:
      type: object
      description: Describes device model capabilities
      required:
        - touch
      properties:
        touch:
          description: Whether device supports touching
          type: boolean

    VisitorSessionState:
      type: string
      enum:
        - PENDING
        - ACTIVE
        - COMPLETE

    VisitorSessionVariable:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        value:
          type: string

    VisitorSession:
      type: object
      required:
        - visitorIds
        - state
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique id for the session
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Exhibition id the visiotr was attending to
        state:
          $ref: '#/components/schemas/VisitorSessionState'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/VisitorSessionVariable'
        visitorIds:
          type: array
          items:
            type: string
            format: uuid
        visitedDeviceGroups:
          type: array
          items:
            $ref: '#/components/schemas/VisitorSessionVisitedDeviceGroup'
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    Visitor:
      type: object
      required:
        - tagId
        - email
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique id for the visitor
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Exhibition id the visitor attended
        email:
          type: string
          format: email
        tagId:
          type: string
        userId:
          type: string
          format: uuid
          readOnly: true
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    VisitorTag:
      type: object
      required:
        - tagId
      properties:
        tagId:
          type: string
          readOnly: true

    VisitorSessionVisitedDeviceGroup:
      type: object
      required:
        - deviceGroupId
      properties:
        deviceGroupId:
          type: string
          format: uuid
        enteredAt:
          type: string
          format: date-time
          description: Time visitor session entered the device group
        exitedAt:
          type: string
          format: date-time
          description: Time visitor session exited the device group

    PageLayout:
      type: object
      description: Describes a layout for a page
      required:
        - name
        - data
        - screenOrientation
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Human readable name for the layout
        data:
          $ref: '#/components/schemas/PageLayoutView'
        thumbnailUrl:
          type: string
          format: url
        modelId:
          type: string
          format: uuid
          description: Device model id
        screenOrientation:
          $ref: '#/components/schemas/ScreenOrientation'
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    PageLayoutView:
      type: object
      required:
        - id
        - widget
        - properties
        - children
      properties:
        id:
          type: string
        widget:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PageLayoutViewProperty'
        children:
          type: array
          items:
            $ref: '#/components/schemas/PageLayoutView'

    PageLayoutViewProperty:
      type: object
      required:
        - name
        - value
        - type
      properties:
        name:
          type: string
        value:
          type: string
        type:
          $ref: '#/components/schemas/PageLayoutViewPropertyType'

    PageLayoutViewPropertyType:
      type: string
      enum:
        - string
        - boolean
        - number
        - color

    ContentVersion:
      type: object
      description: Content version (e.g. language) of an exhibition.
      required:
        - name
        - language
        - rooms
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this page belongs to
        name:
          type: string
          description: Human readable name of the content version
        language:
          type: string
        rooms:
          type: array
          items:
            type: string
            format: uuid
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    GroupContentVersion:
      type: object
      description: Content version (e.g. language) of a device group.
      required:
        - name
        - status
        - contentVersionId
        - deviceGroupId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this group content version belongs to
        name:
          type: string
          description: Human readable name of the group content version
        status:
          $ref: '#/components/schemas/GroupContentVersionStatus'
        contentVersionId:
          type: string
          format: uuid
          description: Id of content version
        deviceGroupId:
          type: string
          format: uuid
          description: Id of device group
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    GroupContentVersionStatus:
      description: Content version status
      type: string
      enum:
        - notstarted
        - inprogress
        - ready

    ExhibitionPage:
      type: object
      required:
        - name
        - layoutId
        - contentVersionId
        - resources
        - deviceId
        - eventTriggers
        - events
        - enterTransitions
        - exitTransitions
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this page belongs to
        deviceId:
          type: string
          format: uuid
          description: Id of device this page belongs to
        layoutId:
          type: string
          format: uuid
          description: Id of page layout
        contentVersionId:
          type: string
          format: uuid
          description: Id of content version
        name:
          type: string
          description: Human readable name for the layout
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ExhibitionPageResource'
        eventTriggers:
          type: array
          items:
            $ref: '#/components/schemas/ExhibitionPageEventTrigger'
        enterTransitions:
          type: array
          items:
            $ref: '#/components/schemas/ExhibitionPageTransition'
        exitTransitions:
          type: array
          items:
            $ref: '#/components/schemas/ExhibitionPageTransition'
        creatorId:
          type: string
          format: uuid
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    ExhibitionPageResource:
      type: object
      required:
        - id
        - data
        - type
      properties:
        id:
          type: string
        data:
          type: string
        type:
          $ref: '#/components/schemas/ExhibitionPageResourceType'

    ExhibitionPageResourceType:
      type: string
      enum:
        - text
        - image
        - video

    ExhibitionPageEventTrigger:
      type: object
      required:
        - eventId
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/ExhibitionPageEvent'
        delay:
          type: integer
          format: int64
        clickViewId:
          type: string
        deviceGroupEvent:
          description: Name of triggering device group event
          type: string
        keyUp:
          type: string
        keyDown:
          type: string
        next:
          type: array
          items:
            $ref: '#/components/schemas/ExhibitionPageEventTrigger'

    ExhibitionPageEvent:
      type: object
      required:
        - action
        - properties
      properties:
        action:
          $ref: '#/components/schemas/ExhibitionPageEventActionType'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/ExhibitionPageEventProperty'

    ExhibitionPageEventProperty:
      type: object
      required:
        - name
        - value
        - type
      properties:
        name:
          type: string
        value:
          type: string
        type:
          $ref: '#/components/schemas/ExhibitionPageEventPropertyType'

    ExhibitionPageEventPropertyType:
      type: string
      enum:
        - string
        - boolean
        - number
        - color

    ExhibitionPageEventActionType:
      type: string
      enum:
        - hide
        - show
        - setuservalue
        - navigate
        - setsrc
        - settext
        - triggerdevicegroupevent

    ExhibitionPageEventTransition:
      type: string
      enum:
        - fade

    ScreenOrientation:
      type: string
      enum:
        - landscape
        - portrait

    Animation:
      type: string
      enum:
        - fade
        - morph

    ExhibitionPageTransitionOptions:
      type: object
      properties:
        morph:
          $ref: '#/components/schemas/ExhibitionPageTransitionOptionsMorph'

    ExhibitionPageTransitionOptionsMorph:
      type: object
      required:
        - views
      properties:
        views:
          type: array
          items:
            $ref: '#/components/schemas/ExhibitionPageTransitionOptionsMorphView'

    ExhibitionPageTransitionOptionsMorphView:
      type: object
      required:
        - sourceId
        - targetId
      properties:
        sourceId:
          type: string
        targetId:
          type: string

    AnimationTimeInterpolation:
      type: string
      enum:
        - acceleratedecelerate
        - accelerate
        - anticipate
        - anticipateovershoot
        - bounce
        - decelerate
        - linear
        - overshoot

    Transition:
      required:
        - animation
        - timeInterpolation
        - duration
        - options
      type: object
      properties:
        animation:
          $ref: '#/components/schemas/Animation'
        timeInterpolation:
          $ref: '#/components/schemas/AnimationTimeInterpolation'
        duration:
          type: integer
          format: int32

    ExhibitionPageTransition:
      required:
        - transition
      type: object
      properties:
        transition:
          $ref: '#/components/schemas/Transition'
        sourceLayoutId:
          type: string
          format: uuid
        targetLayoutId:
          type: string
          format: uuid
        options:
          $ref: '#/components/schemas/ExhibitionPageTransitionOptions'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Polygon:
      type: object
      description: "GeoJson polygon object"
      properties:
        type:
          type: string
        coordinates:
          type: array
          description: Polygon shapes
          items:
            type: array
            description: Coordinates
            items:
              type: array
              description: Coordinate pair
              items:
                type: number
                format: double

    Bounds:
      type: object
      description: Geo bounds object
      required:
        - southWestCorner
        - northEastCorner
      properties:
        southWestCorner:
          $ref: '#/components/schemas/Coordinates'
        northEastCorner:
          $ref: '#/components/schemas/Coordinates'

    Coordinates:
      type: object
      description: Coordinate object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double

    MqttExhibitionPageCreate:
      type: object
      description: MQTT notification message about exhibition page creation. This is actually not part of REST API spec but a realtime notification via MQTT channel
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this page belongs to

    MqttExhibitionPageUpdate:
      type: object
      description: MQTT notification message about exhibition page update. This is actually not part of REST API spec but a realtime notification via MQTT channel
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this page belongs to

    MqttExhibitionPageDelete:
      type: object
      description: MQTT notification message about exhibition page deletion. This is actually not part of REST API spec but a realtime notification via MQTT channel
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this page belongs to

    MqttLayoutCreate:
      type: object
      description: MQTT notification message about layout creation. This is actually not part of REST API spec but a realtime notification via MQTT channel
      properties:
        id:
          type: string
          format: uuid
          readOnly: true

    MqttLayoutUpdate:
      type: object
      description: MQTT notification message about layout update. This is actually not part of REST API spec but a realtime notification via MQTT channel
      properties:
        id:
          type: string
          format: uuid
          readOnly: true

    MqttLayoutDelete:
      type: object
      description: MQTT notification message about layout deletion. This is actually not part of REST API spec but a realtime notification via MQTT channel
      properties:
        id:
          type: string
          format: uuid
          readOnly: true

    MqttExhibitionVisitorSessionCreate:
      type: object
      description: MQTT notification message about exhibition visitor session creation. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this visitor session belongs to

    MqttExhibitionVisitorSessionUpdate:
      type: object
      description: MQTT notification message about exhibition visitor session update. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
        - variablesChanged
        - visitorsChanged
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this visitor session belongs to
        variablesChanged:
          type: boolean
          description: Whether session variables have changed
          readOnly: true
        visitorsChanged:
          type: boolean
          description: Whether session visitors have changed
          readOnly: true

    MqttExhibitionVisitorSessionDelete:
      type: object
      description: MQTT notification message about exhibition visitor session deletion. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this visitor session belongs to

    MqttVisitorCreate:
      type: object
      description: MQTT notification message about exhibition visitor creation. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this visitor belongs to

    MqttVisitorUpdate:
      type: object
      description: MQTT notification message about exhibition visitor update. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this visitor belongs to

    MqttVisitorDelete:
      type: object
      description: MQTT notification message about exhibition visitor deletion. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this visitor belongs to

    MqttDeviceGroupCreate:
      type: object
      description: MQTT notification message about device group creation. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this device group belongs to

    MqttDeviceGroupUpdate:
      type: object
      description: MQTT notification message about device group update. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this device group belongs to

    MqttDeviceGroupDelete:
      type: object
      description: MQTT notification message about device group deletion. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this device group belongs to

    MqttRfidAntennaCreate:
      type: object
      description: MQTT notification message about MQTT antenna creation. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this RFID antenna belongs to

    MqttRfidAntennaUpdate:
      type: object
      description: MQTT notification message about RFID antenna update. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this RFID antenna belongs to
        groupChanged:
          type: boolean
          description: Whether antenna device group has changed
          readOnly: true

    MqttRfidAntennaDelete:
      type: object
      description: MQTT notification message about RFID antenna deletion. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this RFID antenna belongs to

    MqttDeviceCreate:
      type: object
      description: MQTT notification message about antenna creation. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this device belongs to

    MqttDeviceUpdate:
      type: object
      description: MQTT notification message about device update. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this device belongs to
        groupChanged:
          type: boolean
          description: Whether antenna device group has changed
          readOnly: true

    MqttDeviceDelete:
      type: object
      description: MQTT notification message about device deletion. This is actually not part of REST API spec but a realtime notification via MQTT channel
      required:
        - id
        - exhibitionId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exhibitionId:
          type: string
          format: uuid
          readOnly: true
          description: Id of exhibition this device belongs to

    MqttTriggerDeviceGroupEvent:
      type: object
      required:
        - name
      description: |
        MQTT notification message for informing device group members about triggered group event. Event in sent into /events/deviceGroup/{deviceGroupId} -topic and thus does not require id of device group as a property.

        This is actually not part of REST API spec but a realtime notification via MQTT channel
      properties:
        event:
          type: string
          description: name of triggered event
